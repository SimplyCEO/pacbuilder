#!/bin/sh

if [ ! -d /etc/pacbuilder.d/modules ]; then
  printf "%b::%b %b%s%b\n" \
    "\033[1;31m" "\033[0m" \
    "\033[1m" "ERROR: No module directory found. Did you installed it correctly?" "\033[0m"
  exit 1
fi

source /etc/pacbuilder.d/modules/core.sh
source /etc/pacbuilder.d/modules/tools.sh
source /etc/pacbuilder.d/modules/information.sh
source /etc/pacbuilder.d/modules/constructor.sh
source /etc/pacbuilder.d/modules/manager.sh

if [ $# -lt 1 ]; then fhelp; exit 1; fi

OPTIONS="$@"
FLAG_CALL=$(array 0 "${OPTIONS}")
case "${FLAG_CALL}" in
  -h|--help) fhelp; exit 0 ;;
  -V|--version) fversion; exit 0 ;;
  -B|-Bu|--build)
    EXTRA_OPTION=0

    case "${FLAG_CALL}" in
      -Bu) UPGRADE_PACKAGES=1 ;;
      *) if [ $# -lt 2 ]; then fhelp; exit 1; fi ;;
    esac

    shift 1

    for extra_option in "$@"; do
      if [ $(char 1 "${extra_option}") != "-" ]; then break; fi
      case "${extra_option}" in
        # Clean package directory.
        --clean) CLEAN_PACKAGES=1 ;;
        # List packages from clone directory.
        --list) LIST_PACKAGES=1 ;;
        --edit) EDIT_PACKAGES=1 ;;
        --skippgpcheck) SKIP_PGP_SIGNATURE="--skippgpcheck" ;;
        --purge) PURGE_PACKAGES=1 ;;
        -u|--upgrade) UPGRADE_PACKAGES=1 ;;
        *) fhelp "${extra_option}"; exit 0 ;;
      esac
      EXTRA_OPTION=1
      shift 1
    done

    STRING="$@"
    if [ ! -z "${STRING}" ]; then
      for package in "$@"; do
        if [ $EXTRA_OPTION -eq 1 ]; then
          if [ $EDIT_PACKAGES -eq 1 ]; then edit_packages "${package}"; continue; fi
          if [ $LIST_PACKAGES -eq 1 ]; then list_packages "${package}"; continue; fi
        fi

        if [ $CLEAN_PACKAGES -eq 1 ] || [ $PURGE_PACKAGES -eq 1 ]; then clean_packages "${package}"; fi

        case "${FLAG_CALL}" in
          -B|--build)
            if [ $UPGRADE_PACKAGES -eq 1 ]; then
              upgrade_packages "${package}"
            else
              build_packages "${package}"
            fi
            ;;
          -Bu) upgrade_packages "${package}" ;;
        esac
        DEPENDENCY_RABBIT_HOLE=0
        PACKAGE_PWD=""
      done
    else
      # Clean packages directory.
      if [ $CLEAN_PACKAGES -eq 1 ] || [ $PURGE_PACKAGES -eq 1 ] && [ $UPGRADE_PACKAGES -ne 1 ]; then clean_packages NULL; fi
      if [ $LIST_PACKAGES -eq 1 ]; then list_packages; fi
      # Upgrade all packages inside clone directory.
      if [ $UPGRADE_PACKAGES -eq 1 ]; then
        for package in $(ls "${REPO_FOLDER}"); do
          upgrade_packages "${package}"
          DEPENDENCY_RABBIT_HOLE=0
          PACKAGE_PWD=""
        done
      fi
    fi
    ;;
  *) run_pacman "$@"; break ;;
esac

